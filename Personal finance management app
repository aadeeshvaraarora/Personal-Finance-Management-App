{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "56be914b-6a66-4d75-8b47-e70508088746",
   "metadata": {},
   "outputs": [],
   "source": [
    "import tkinter as tk\n",
    "from tkinter import messagebox\n",
    "from tkinter import simpledialog\n",
    "import webbrowser\n",
    "\n",
    "class PersonalFinanceApp:\n",
    "    def __init__(self, root):\n",
    "        self.root = root\n",
    "        self.root.title(\"Personal Finance Management App\")\n",
    "        self.root.geometry(\"500x500\")\n",
    "        self.root.config(bg=\"white\")\n",
    "\n",
    "        # Logo\n",
    "        self.logo_label = tk.Label(root, text=\"TRACK\", font=(\"Arial\", 50, \"bold\"), fg=\"black\", bg=\"white\")\n",
    "        self.logo_label.place(relx=0.5, rely=0.2, anchor=\"center\")\n",
    "\n",
    "        # Buttons\n",
    "        self.track_expenses_button = tk.Button(root, text=\"Track Your Expenses\", font=(\"Arial\", 15), command=self.track_expenses)\n",
    "        self.track_expenses_button.place(relx=0.5, rely=0.4, anchor=\"center\")\n",
    "\n",
    "        self.smart_investments_button = tk.Button(root, text=\"See Smart Investments\", font=(\"Arial\", 15), command=self.see_smart_investments)\n",
    "        self.smart_investments_button.place(relx=0.5, rely=0.5, anchor=\"center\")\n",
    "\n",
    "        self.money_tips_button = tk.Button(root, text=\"See Money Tips\", font=(\"Arial\", 15), command=self.see_money_tips)\n",
    "        self.money_tips_button.place(relx=0.5, rely=0.6, anchor=\"center\")\n",
    "\n",
    "    def track_expenses(self):\n",
    "        try:\n",
    "            expenses = float(tk.simpledialog.askstring(\"Track Your Expenses\", \"Enter your monthly expenses: $\"))\n",
    "            if expenses <= 5000:\n",
    "                message = \"Way to go! Check out the smart investments.\"\n",
    "            else:\n",
    "                message = \"We can work it out! This is your budget plan:\\n\"\n",
    "                message += f\"Rent: 2,000 rupees\\nUtilities (Electricity, Water, Gas): 1,000 rupees\\nInternet and Phone: 500 rupees\\n\"\n",
    "                message += f\"Total Fixed Expenses: 3,500 rupees\\n\\nVariable Expenses:\\nGroceries: 1,500 rupees\\n\"\n",
    "                message += f\"Transportation (fuel, public transport, etc.): 500 rupees\\nHealth (medications, check-ups): 300 rupees\\n\"\n",
    "                message += f\"Personal Care (toiletries, grooming): 200 rupees\\nEntertainment (movies, dining out): 300 rupees\\n\"\n",
    "                message += f\"Total Variable Expenses: 2,800 rupees\\n\\nSavings:\\nEmergency Fund: 500 rupees\\nOther Savings: 200 rupees\\n\"\n",
    "                message += f\"Total Savings: 700 rupees\"\n",
    "\n",
    "            messagebox.showinfo(\"Expenses\", message)\n",
    "        except ValueError:\n",
    "            messagebox.showerror(\"Error\", \"Please enter a valid numeric value for expenses.\")\n",
    "\n",
    "    def see_smart_investments(self):\n",
    "        # Open the web browser with the provided link\n",
    "        webbrowser.open(\"https://smartinvestment.in/\")\n",
    "\n",
    "    def see_money_tips(self):\n",
    "        money_tips_message = \"\"\"\n",
    "        Here is your daily dose of money tips!\n",
    "        1) Manage your debt\n",
    "        2) Get insurance\n",
    "        3) Use your credit card\n",
    "        4) Keep a track of interest rates\n",
    "        5) Save for the unexpected\n",
    "\n",
    "        See you tomorrow!\n",
    "        \"\"\"\n",
    "        messagebox.showinfo(\"Money Tips\", money_tips_message)\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    root = tk.Tk()\n",
    "    finance_app = PersonalFinanceApp(root)\n",
    "    root.mainloop()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f3306a13-cee2-47e8-934d-e49cbdafaf57",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
